import { db } from "./server/db";
import { users, userRoles, roles } from "./shared/schema";
import { desc } from "drizzle-orm";

async function checkUsers() {
  try {
    console.log("üîç Verificando usu√°rios no banco de dados...\n");

    // Verificar quantidade de usu√°rios
    const allUsers = await db.select().from(users).orderBy(desc(users.createdAt));
    console.log(`üìä Total de usu√°rios: ${allUsers.length}`);

    if (allUsers.length === 0) {
      console.log("‚ö†Ô∏è  Nenhum usu√°rio encontrado no banco de dados!");
      console.log("\nüí° Vamos criar um usu√°rio admin de teste...");

      // Buscar role de ADMIN
      const adminRole = await db.select().from(roles).where((r) => r.name === 'ADMIN').limit(1);

      if (adminRole.length === 0) {
        console.log("‚ùå Role ADMIN n√£o encontrada! Criando roles...");

        // Criar role ADMIN
        const [newAdminRole] = await db.insert(roles).values({
          name: 'ADMIN',
          description: 'Administrador do sistema',
          permissions: JSON.stringify([
            'CRUD_GLOBAL',
            'VIEW_ALL_TENANTS',
            'MANAGE_USERS',
            'MANAGE_ROLES',
            'VIEW_REPORTS_GLOBAL',
            'MANAGE_WORKSHOPS'
          ])
        }).returning();

        console.log("‚úÖ Role ADMIN criada!");

        // Criar usu√°rio admin
        const [adminUser] = await db.insert(users).values({
          username: 'admin',
          email: 'admin@ruidcar.com',
          password: '$2a$10$YJ0kVGVfH5JHpCy3wfhPJeFwJvbIMwpL5uI/IKwL3K7EEKznEQ4Hy', // senha: admin123
          name: 'Admin RuidCar',
          role: 'user'
        }).returning();

        console.log("‚úÖ Usu√°rio admin criado!");
        console.log("   Email: admin@ruidcar.com");
        console.log("   Senha: admin123");

        // Associar role ao usu√°rio
        await db.insert(userRoles).values({
          userId: adminUser.id,
          roleId: newAdminRole.id
        });

        console.log("‚úÖ Role ADMIN associada ao usu√°rio!");
      }

    } else {
      console.log("\nüë§ Usu√°rios encontrados:");
      for (const user of allUsers) {
        console.log(`   - ${user.email} (@${user.username}) - ${user.name}`);

        // Buscar roles do usu√°rio
        const userRolesList = await db.select({
          roleName: roles.name
        })
        .from(userRoles)
        .innerJoin(roles, (r) => r.id === userRoles.roleId)
        .where((ur) => ur.userId === user.id);

        if (userRolesList.length > 0) {
          console.log(`     Roles: ${userRolesList.map(r => r.roleName).join(', ')}`);
        } else {
          console.log(`     Roles: Nenhuma role atribu√≠da`);
        }
      }
    }

    console.log("\n‚úÖ Verifica√ß√£o conclu√≠da!");

  } catch (error) {
    console.error("‚ùå Erro ao verificar usu√°rios:", error);
  } finally {
    process.exit(0);
  }
}

checkUsers();